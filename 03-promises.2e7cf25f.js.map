{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAoCA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA3CEQ,SAASC,cAAc,SAE/BC,iBAAiB,UAGxB,SAAsBC,GACpBA,EAAMC,iBACN,MAAMC,EAAQC,OAAOH,EAAMI,OAAOC,SAAShB,MAAMiB,OAC3CC,EAAOJ,OAAOH,EAAMI,OAAOC,SAASE,KAAKD,OACzCE,EAASL,OAAOH,EAAMI,OAAOC,SAASG,OAAOF,OACnDG,QAAQC,IAAIR,GACZO,QAAQC,IAAIH,GACZE,QAAQC,IAAIF,GAEZ,IAAK,IAAIG,EAAQ,EAAGA,EAAQH,EAAQG,IAClCF,QAAQC,IAAIC,GACZxB,EAAcwB,EAAOT,EAAQK,EAAOI,GACjCC,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBwB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAqB3B,EAAY,QAASC,MAAU,IAGvD2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBwB,EAAA5B,GAAS6B,OAAOG,QACd,sBAAoB7B,EAAY,QAASC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onFormSubmit);\n// const deley = e.target.elements.deley.value;\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const delay = Number(event.target.elements.delay.value);\n  const step = Number(event.target.elements.step.value);\n  const amount = Number(event.target.elements.amount.value);\n  console.log(delay);\n  console.log(step);\n  console.log(amount);\n\n  for (let index = 0; index < amount; index++) {\n    console.log(index);\n    createPromise(index, delay + step * index)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position + 1} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position + 1} in ${delay}ms`\n        );\n      });\n\n    //  (console.log(`❌ Rejected promise ${position} in ${delay}ms`));\n    //   }\n  }\n}\n//   }\n// }\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// if (shouldResolve) {\n//   resolve(console.log(`✅ Fulfilled promise ${position} in ${delay}ms`));\n// } else {\n//   reject(console.log(`❌ Rejected promise ${position} in ${delay}ms`));\n// }\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","delay1","Number","target","elements","value","step","amount","console","log","index","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.2e7cf25f.js.map"}