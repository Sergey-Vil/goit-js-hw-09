{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAoCA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IA3CQQ,SAASC,cAAc,SAE/BC,iBAAiB,UAGxB,SAAsBC,GACpBA,EAAMC,iBACN,IAAMC,EAAQC,OAAOH,EAAMI,OAAOC,SAAShB,MAAMiB,OAC3CC,EAAOJ,OAAOH,EAAMI,OAAOC,SAASE,KAAKD,OACzCE,EAASL,OAAOH,EAAMI,OAAOC,SAASG,OAAOF,OACnDG,QAAQC,IAAIR,GACZO,QAAQC,IAAIH,GACZE,QAAQC,IAAIF,GAEZ,IAAK,IAAIG,EAAQ,EAAGA,EAAQH,EAAQG,IAClCF,QAAQC,IAAIC,GACZxB,EAAcwB,EAAOT,EAAQK,EAAOI,GACjCC,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACjByB,EAAA7B,GAAS8B,OAAOC,QACd,uBAA4CC,OAAnB7B,EAAW,EAAE,QAAY6B,OAAN5B,EAAM,M,IAGrD6B,OAAM,SAAAL,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClByB,EAAA7B,GAAS8B,OAAOI,QACd,sBAA2CF,OAAnB7B,EAAW,EAAE,QAAY6B,OAAN5B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onFormSubmit);\n// const deley = e.target.elements.deley.value;\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const delay = Number(event.target.elements.delay.value);\n  const step = Number(event.target.elements.step.value);\n  const amount = Number(event.target.elements.amount.value);\n  console.log(delay);\n  console.log(step);\n  console.log(amount);\n\n  for (let index = 0; index < amount; index++) {\n    console.log(index);\n    createPromise(index, delay + step * index)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position + 1} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position + 1} in ${delay}ms`\n        );\n      });\n\n    //  (console.log(`❌ Rejected promise ${position} in ${delay}ms`));\n    //   }\n  }\n}\n//   }\n// }\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// if (shouldResolve) {\n//   resolve(console.log(`✅ Fulfilled promise ${position} in ${delay}ms`));\n// } else {\n//   reject(console.log(`❌ Rejected promise ${position} in ${delay}ms`));\n// }\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","delay1","Number","target","elements","value","step","amount","console","log","index","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.5447ea73.js.map"}